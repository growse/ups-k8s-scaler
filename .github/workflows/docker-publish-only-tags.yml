---
name: Build, package and publish
"on":
  push:
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+
    branches:
      - main
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GRADLE_PROJECT_ROOT: ups-k8s-scaler
  GRADLE_ASSEMBLE_TASK_NAME: nativeCompile

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: "latest"
          java-version: "17"
          components: "native-image"
          native-image-musl: "true"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: ./${GRADLE_PROJECT_ROOT}/gradlew -p ${GRADLE_PROJECT_ROOT} check ${GRADLE_ASSEMBLE_TASK_NAME} --no-daemon
      - run: echo ${{ env.GRADLE_PROJECT_ROOT }}/build/native/nativeCompile/${{ env.GRADLE_PROJECT_ROOT }}
      - run: file ${GRADLE_PROJECT_ROOT}/build/native/nativeCompile/${GRADLE_PROJECT_ROOT}
      - run: find ${{ env.GRADLE_PROJECT_ROOT }}
      - name: UPX binary
        uses: crazy-max/ghaction-upx@v1.4.0
        with:
          version: "latest"
          files: |
            ./${{ env.GRADLE_PROJECT_ROOT }}/build/native/nativeCompile/${{ env.GRADLE_PROJECT_ROOT }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
